(function() {
  'use strict';
  
  angular
      .module('cats', [
        'ui.router',
        'ui.bootstrap',
        'underscore',
        'angular-loading-bar',
        'angularSpinner'
      ])
      .run(function($log) {
        $log.debug('run Cat friends.');
      });

})();

(function() {
  'use strict';
  
  angular.module('cats')
      .constant('config', {
        url: 'http://146.185.137.61:3000/api',
        itemPerPage: 10
      });
})();

(function() {
  'use strict';

  angular
      .module('cats')
      .config(routeConfig)
      .config(configSpinner);

  function routeConfig($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/user/1/0");
    $stateProvider
        .state('user', {
          url: "/user/:page/:userIndex",
          templateUrl: "app/views/user/user.html",
          controller: 'UserCtrl'
        });
  }

  function configSpinner(usSpinnerConfigProvider) {
    usSpinnerConfigProvider.setDefaults({color: '#00b9ad'});
  }

})();

(function() {
  'use strict';

  angular
      .module('cats')
      .directive('backImage', backImage);

  function backImage() {
    return function(scope, element, attrs) {
      var url = attrs.backImage;
      element.css({
        'background-image': 'url(' + url + ')',
        'background-size': 'cover'
      });
    };
  };
})();

(function() {
  'use strict';

  angular
      .module('cats')
      .directive('cat', cat);

  function cat() {
    var directive = {
      link: link,
      templateUrl: 'app/views/directives/cat.html',
      restrict: 'E'
    };
    return directive;

    function link(scope, element, attrs) {
      /* */
    }
  }
})();
(function() {
  'use strict';

  angular
      .module('cats')
      .directive('friend', friend);

  function friend() {
    var directive = {
      link: link,
      templateUrl: 'app/views/directives/friend.html',
      restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
    
    }
  }
})();
(function() {
  'use strict';

  angular
      .module('cats')
      .directive('navigate', navigateUser);

  function navigateUser(config) {
    var directive = {
      link: link,
      templateUrl: 'app/views/directives/navigate.html',
      restrict: 'E',
      scope: {
        page: '=page',
        userIndex: '=userIndex'
      }
    };
    return directive;

    function link(scope) {
      scope.prevShow = true;
      scope.prev = {};
      scope.prev.page = parseInt(scope.page);
      scope.prev.userIndex = parseInt(scope.userIndex);

      if (scope.prev.page + scope.prev.userIndex - 1) {
        scope.prev.userIndex--;
        if (scope.prev.userIndex < 0) {
          scope.prev.page = scope.prev.page - 1;
          scope.prev.userIndex = config.itemPerPage - 1;
        }
      } else {
        scope.prevShow = false;
      }

      scope.nextShow = true;
      scope.next = {};
      scope.next.page = parseInt(scope.page);
      scope.next.userIndex = parseInt(scope.userIndex) + 1;
      if (scope.next.userIndex >= config.itemPerPage) {
        scope.next.page++;
        scope.next.userIndex = 0;
      }
    }
  }
})();
(function() {
  'use strict';

  angular
      .module('cats')
      .directive('userProfile', userProfile);

  function userProfile() {
    var directive = {
      link: link,
      templateUrl: 'app/views/directives/user.profile.html',
      restrict: 'E'
    };
    return directive;

    function link(scope, element, attrs) {

    }
  }

})();

(function() {
  'use strict';

  angular.module('cats').factory('UserService', [
    '$http',
    '$q',
    'usSpinnerService',
    'config',
    UserService
  ]);

  function UserService($http, $q, usSpinnerService, config) {
    var cache = [];
    var oldPage = null;
    var selectUser = null;
    var service = {
      getUser: getUser,
      updateUser: updateUser
    };

    return service;
    
    function getUser(page, userIndex) {
      return $q(function(resolved, reject) {
        if (oldPage != page) {
          usSpinnerService.spin('spinner');
          $http({
            method: 'get',
            url: config.url + '/users',
            params: { limit: config.itemPerPage, page: page }
          }).then(
              function(resp) {
                cache = resp.data.docs;
                oldPage = page;
                selectUser = cache[userIndex];
                selectUser.born = new Date(selectUser.born);
                usSpinnerService.stop('spinner');
                resolved(selectUser);
              },
              reject
          );
        } else {
          selectUser = cache[userIndex];
          selectUser.born = new Date(selectUser.born);
          resolved(selectUser);
        }
      });
    }

    function updateUser(id, params) {
      return $http.put(config.url + '/users/' + id, params);
    }
  }
})();
(function() {
  'use strict';

  angular
      .module('cats')
      .controller('UserCtrl', UserCtrl);

  function UserCtrl($scope, $state, UserService) {
    $scope.page = $state.params.page || 1;
    $scope.userIndex = $state.params.userIndex || 0;

    $scope.users = {};
    $scope.selectUser = {};

    $scope.submit = function() {
      var params = {
        name: { first: $scope.selectUser.name.first, last: $scope.selectUser.name.last },
        email: $scope.selectUser.email,
        born: $scope.selectUser.born,
        phone: $scope.selectUser.phone
      };

      UserService.updateUser($scope.selectUser._id, params)
          .then(function(res) {
                console.log(res);
              },
              function(err) {
                console.log(err);
              }
          );
    };

    UserService.getUser($scope.page, $scope.userIndex).then(function(user) {
      $scope.selectUser = user;
    });
  }

})();
